name: Test
on:
  workflow_call: 
  # Allows you to call this workflow within another workflow
  workflow_dispatch: 
  # Allows you to run this workflow manually from the Actions tab
  pull_request:
    branches: [main]

jobs:
  paths-filter:
    runs-on: ubuntu-latest
    outputs:
      output1: ${{ steps.filter.outputs.api }}
    steps:
      - uses: actions/checkout@v2
      - uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            api:
              - 'workout/api/**'
        # run only if 'workout/api' files were changed
      - name: workout api tests
        if: steps.filter.outputs.api == 'true'
        run: echo "workout api files"
  test-project:
    runs-on: ubuntu-latest
    needs: paths-filter
    if: needs.paths-filter.outputs.output1 == 'true'
    services:
      postgres:
        image: postgres:15.3
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: testing
          POSTGRES_HOST: localhost
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready 
          --health-interval 10s 
          --health-timeout 5s 
          --health-retries 5
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Install dependencies
        run: |
          pip install pipenv
          pipenv install --dev --system
      - name: Set environment variables
        run: |
          echo "DB_NAME=testing" >> $GITHUB_ENV
          echo "DB_USER=postgres" >> $GITHUB_ENV
          echo "DB_PASSWORD=postgres" >> $GITHUB_ENV
          echo "DB_HOST=localhost" >> $GITHUB_ENV
          echo "DB_PORT=5432" >> $GITHUB_ENV
      - name: Flake8 checks
        run: pipenv run flake8
      - name: Run unit tests and collect coverage
        run: python -m pytest -vv --tb=native --create-db --nomigrations --cov-report term-missing --cov=./workout 
      - name: Upload coverage reports to Codecov with GitHub Action
        uses: codecov/codecov-action@v3
